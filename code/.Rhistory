View(hof)
hof_players <- read_csv("../data/hof-players.csv")
hof_players <- read_csv("../data/hof-player-stats.csv")
rm(list = ls())
# ======================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ======================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("../data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggplot(data = hof_players) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_label(aes(x = "Hits", y = "Home Runs", label = Name))
ggplot(data = hof_players) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_label(aes(x = H.x, y = HR.x, label = team))
ggplot(data = hof_players) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_label(aes(x = H.x, y = HR.x, label = Name))
ggplot(data = hof_players) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_label(aes(x = H.x, y = HR.x))
# ======================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ======================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("../data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggplot(data = hof_players) +
geom_point(aes(x = H.x, y = HR.x)) +
# ======================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ======================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("../data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggplot(data = hof_players) +
geom_point(aes(x = H.x, y = HR.x))
ggplot(data = filter(hof_players, AB > 4000) +
geom_point(aes(x = H.x, y = HR.x))
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x, y = HR.x))
# ======================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ======================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("../data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x, y = HR.x))
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000)
hits3k <- count(hof_players$H.x[hof_players$H.x > 3000])
# ======================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ======================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("../data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000)
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- count(hof_players$H.x[hof_players$H.x > 3000])
hits3k <- count(hof_players$H.x[ > 3000])
hits3k <- count(hof_players$H.x > 3000)
hits3k <- count(hof_players$H.x[hof_players$H.x > 3000])
hits3k <- hof_players$H.x[hof_players$H.x > 3000]
hits3k <- na.omit(hof_players$H.x[hof_players$H.x > 3000])
hits3k <- count(na.omit(hof_players$H.x[hof_players$H.x > 3000]))
# ======================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ======================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("../data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000)
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- length(na.omit(hof_players$H.x[hof_players$H.x > 3000]))
hr500 <- length(na.omit(hof_players$HR.x[hof_players$HR.x > 500]))
# ======================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ======================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("../data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000)
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- as.numeric(length(na.omit(hof_players$H.x[hof_players$H.x > 3000])))
hr500 <- as.numeric(length(na.omit(hof_players$HR.x[hof_players$HR.x > 500])))
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
percentOver500 <- hr500/filter(hof_players, AB > 4000)
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- as.numeric(length(na.omit(hof_players$H.x[hof_players$H.x > 3000])))
hr500 <- as.numeric(length(na.omit(hof_players$HR.x[hof_players$HR.x > 500])))
percentOver3k <- hits3k/filter(hof_players, AB > 4000)
percentOver500 <- hr500/filter(hof_players, AB > 4000)
percentOver500 <- hr500/(filter(hof_players, AB > 4000))
percentOver500 <- hr500/length(filter(hof_players, AB > 4000))
# ======================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ======================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("../data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- as.numeric(length(na.omit(hof_players$H.x[hof_players$H.x > 3000])))
hr500 <- as.numeric(length(na.omit(hof_players$HR.x[hof_players$HR.x > 500])))
percentOver3k <- hits3k/length(filter(hof_players, AB > 4000))
percentOver500 <- hr500/length(filter(hof_players, AB > 4000))
percentOver500 <- hr500/length(filter(hof_players, AB > 4000)) * 100
# ======================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ======================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("../data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- as.numeric(length(na.omit(hof_players$H.x[hof_players$H.x > 3000])))
hr500 <- as.numeric(length(na.omit(hof_players$HR.x[hof_players$HR.x > 500])))
percentOver3k <- hits3k/length(filter(hof_players, AB > 4000)) * 100
percentOver500 <- hr500/length(filter(hof_players, AB > 4000)) * 100
# ======================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ======================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("../data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- as.numeric(length(na.omit(hof_players$H.x[hof_players$H.x > 3000])))
hr500 <- as.numeric(length(na.omit(hof_players$HR.x[hof_players$HR.x > 500])))
percentOver3k <- round(hits3k/length(filter(hof_players, AB > 4000)) * 100, 2)
percentOver500 <- round(hr500/length(filter(hof_players, AB > 4000)) * 100, 2)
# ============================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ============================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("../data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x, y = HR.x)) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- as.numeric(length(na.omit(hof_players$H.x[hof_players$H.x > 3000])))
hr500 <- as.numeric(length(na.omit(hof_players$HR.x[hof_players$HR.x > 500])))
percentOver3k <- round(hits3k/length(filter(hof_players, AB > 4000)) * 100, 2)
percentOver500 <- round(hr500/length(filter(hof_players, AB > 4000)) * 100, 2)
#how many above 3000 strikeouts or 300 wins out of qualifying pitchers?
ks3k <- as.numeric(length(na.omit(hof_players$SO.y[hof_players$SO.y > 3000])))
wins300 <- as.numeric(length(na.omit(hof_players$W[hof_players$W > 300])))
#3000 strikeouts and 300 wins
ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
labs(x = "Strikeouts", y = "Wins", title = "Strikeouts and Wins")
percentOver300 <- round(wins300/length(filter(hof_players, IP > 0)) * 100, 2)
SO3k <- as.numeric(length(na.omit(hof_players$SO.y[hof_players$SO.y > 3000])))
wins300 <- as.numeric(length(na.omit(hof_players$W[hof_players$W > 300])))
percentOfSO3k <- round(SO3k/length(filter(hof_players, IP > 0)) * 100, 2)
percentOver300 <- round(wins300/length(filter(hof_players, IP > 0)) * 100, 2)
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x < 3000, y = HR.x < 500)) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x[H.x < 3000], y = HR.x[HR.x < 500])) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(aes(x = H.x[H.x < 3000], y = HR.x)) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green'))
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
guides(fill = FALSE) +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x, guide = FALSE)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000)
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500, color = 'red') +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500, color = 'red') +
geom_vline(xintercept = 3000, color = 'blue') +
theme(legend.position="none") +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500, color = 'blue') +
geom_vline(xintercept = 3000, color = 'red') +
theme(legend.position="none") +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot(data = filter(hof_players, AB > 4000)) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W > 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W > 300),
aes(x = SO.y, y = W, color = 'green')) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
labs(x = "Strikeouts", y = "Wins", title = "Strikeouts and Wins")
ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W > 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W > 300),
aes(x = SO.y, y = W, color = 'green')) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Strikeouts", y = "Wins", title = "Strikeouts and Wins")
ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W > 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W > 300),
aes(x = SO.y, y = W, color = 'green', label = Name)) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Strikeouts", y = "Wins", title = "Strikeouts and Wins")
ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W > 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W > 300),
aes(x = SO.y, y = W, color = 'green')) +
geom_label(aes(x = So.y, y = W, label = Name))
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Strikeouts", y = "Wins", title = "Strikeouts and Wins")
ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W > 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W > 300),
aes(x = SO.y, y = W, color = 'green')) +
geom_label(aes(x = SO.y, y = W, label = Name)) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Strikeouts", y = "Wins", title = "Strikeouts and Wins")
ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W > 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W > 300),
aes(x = SO.y, y = W, color = 'green')) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Strikeouts", y = "Wins", title = "Strikeouts and Wins")

aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W > 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W > 300),
aes(x = SO.y, y = W, color = 'green')) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Strikeouts", y = "Wins", title = "Strikeouts and Wins")
ggsave(filename = "images/strikeouts_wins.pdf")
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- as.numeric(length(na.omit(hof_players$H.x[hof_players$H.x > 3000])))
hr500 <- as.numeric(length(na.omit(hof_players$HR.x[hof_players$HR.x > 500])))
percentOver3k <- round(hits3k/length(filter(hof_players, AB > 4000)) * 100, 2)
percentOver500 <- round(hr500/length(filter(hof_players, AB > 4000)) * 100, 2)
#how many above 3000 strikeouts or 300 wins out of qualifying pitchers?
SO3k <- as.numeric(length(na.omit(hof_players$SO.y[hof_players$SO.y > 3000])))
wins300 <- as.numeric(length(na.omit(hof_players$W[hof_players$W > 300])))
percentOfSO3k <- round(SO3k/length(filter(hof_players, IP > 0)) * 100, 2)
percentOver300 <- round(wins300/length(filter(hof_players, IP > 0)) * 100, 2)
rm(list = ls())
source(create-graphs.R)
source('data/create-graphs.R')
source('code/create-graphs.R')
# ============================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ============================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggsave(filename = "images/hits_hr.png")
#3000 strikeouts and 300 wins
ggKW <- ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W > 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W > 300),
aes(x = SO.y, y = W, color = 'green')) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Strikeouts", y = "Wins", title = "Strikeouts and Wins")
ggsave(filename = "images/strikeouts_wins.pdf")
#how many players in the hall of fame?
numBatters <- as.numeric(length(filter(hof_players, AB > 4000)))
numPitchers <- as.numeric(length(filter(hof_players, IP > 0)))
numTotal <- as.numeric(length(hof_players))
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- as.numeric(length(na.omit(hof_players$H.x[hof_players$H.x > 3000])))
hr500 <- as.numeric(length(na.omit(hof_players$HR.x[hof_players$HR.x > 500])))
percentOver3k <- round(hits3k/length(filter(hof_players, AB > 4000)) * 100, 2)
percentOver500 <- round(hr500/length(filter(hof_players, AB > 4000)) * 100, 2)
#how many above 3000 strikeouts or 300 wins out of qualifying pitchers?
SO3k <- as.numeric(length(na.omit(hof_players$SO.y[hof_players$SO.y > 3000])))
wins300 <- as.numeric(length(na.omit(hof_players$W[hof_players$W > 300])))
percentOfSO3k <- round(SO3k/length(filter(hof_players, IP > 0)) * 100, 2)
percentOver300 <- round(wins300/length(filter(hof_players, IP > 0)) * 100, 2)
numTotal <- as.numeric(length(hof_players))
numTotal <- as.numeric(length(hof_players))
numTotal <- as.numeric(length(hof_players)) + 1
numTotal <- as.numeric(nrow(hof_players))
numBatters <- as.numeric(nrow(filter(hof_players, AB > 4000)))
numPitchers <- as.numeric(nrow(filter(hof_players, IP > 0)))
numTotal <- as.numeric(nrow(hof_players))
# ============================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ============================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggsave(filename = "images/hits_hr.png")
#3000 strikeouts and 300 wins
ggKW <- ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W > 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W > 300),
aes(x = SO.y, y = W, color = 'green')) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Strikeouts", y = "Wins", title = "Strikeouts and Wins")
ggsave(filename = "images/strikeouts_wins.pdf")
#how many players in the hall of fame?
numBatters <- as.numeric(nrow(filter(hof_players, AB > 4000)))
numPitchers <- as.numeric(nrow(filter(hof_players, IP > 0)))
numTotal <- as.numeric(nrow(hof_players))
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- as.numeric(length(na.omit(hof_players$H.x[hof_players$H.x > 3000])))
hr500 <- as.numeric(length(na.omit(hof_players$HR.x[hof_players$HR.x > 500])))
percentOver3k <- round(hits3k/nrow(filter(hof_players, AB > 4000)) * 100, 2)
percentOver500 <- round(hr500/nrow(filter(hof_players, AB > 4000)) * 100, 2)
#how many above 3000 strikeouts or 300 wins out of qualifying pitchers?
SO3k <- as.numeric(length(na.omit(hof_players$SO.y[hof_players$SO.y > 3000])))
wins300 <- as.numeric(length(na.omit(hof_players$W[hof_players$W > 300])))
percentOfSO3k <- round(SO3k/nrow(filter(hof_players, IP > 0)) * 100, 2)
percentOver300 <- round(wins300/nrow(filter(hof_players, IP > 0)) * 100, 2)
over500and3k <- as.numeric(length(na.omit(
hof_players$HR.x[((hof_players$HR.x > 500)&(hof_players$H.x > 3000))])))
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Hits", y = "Home Runs", title = "Home Runs and Hits")
ggsave(filename = "images/hits_hr.png")
hits3k <- as.numeric(length(na.omit(hof_players$H.x[hof_players$H.x > 3000])))
hr500 <- as.numeric(length(na.omit(hof_players$HR.x[hof_players$HR.x > 500])))
over500and3k <- as.numeric(length(na.omit(
hof_players$HR.x[((hof_players$HR.x > 500)&(hof_players$H.x > 3000))])))
percentOver3k <- round(hits3k/nrow(filter(hof_players, AB > 4000)) * 100, 2)
percentOver500 <- round(hr500/nrow(filter(hof_players, AB > 4000)) * 100, 2)
over500and3kPercent <-
round((hr500 + hits3k - over500and3k)/
nrow(filter(hof_players, AB > 4000)) * 100, 2)
over500and3kPercent <-
round((over500and3k)/nrow(filter(hof_players, AB > 4000)) * 100, 2)
over300and3kPercent <-
round((over300and3k)/nrow(filter(hof_players, IP > 0)) * 100, 2)
SO3k <- as.numeric(length(na.omit(hof_players$SO.y[hof_players$SO.y > 3000])))
wins300 <- as.numeric(length(na.omit(hof_players$W[hof_players$W > 300])))
over300and3k <- as.numeric(length(na.omit(
hof_players$SO.y[((hof_players$W > 300)&(hof_players$SO.y > 3000))])))
percentOfSO3k <- round(SO3k/nrow(filter(hof_players, IP > 0)) * 100, 2)
percentOver300 <- round(wins300/nrow(filter(hof_players, IP > 0)) * 100, 2)
over300and3kPercent <-
round((over300and3k)/nrow(filter(hof_players, IP > 0)) * 100, 2)
# ============================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ============================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x > 3000, HR.x > 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Hits", y = "Home Runs",
title = "Home Runs and Hits among current Hall of Famers")
ggsave(filename = "images/hits_hr.png")
#3000 strikeouts and 300 wins
ggKW <- ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W > 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y > 3000, W > 300),
aes(x = SO.y, y = W, color = 'green')) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Strikeouts", y = "Wins",
title = "Strikeouts and Wins among current Hall of Famers")
ggsave(filename = "images/strikeouts_wins.png")
#how many players in the hall of fame?
numBatters <- as.numeric(nrow(filter(hof_players, AB > 4000)))
numPitchers <- as.numeric(nrow(filter(hof_players, IP > 0)))
numTotal <- as.numeric(nrow(hof_players))
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- as.numeric(length(na.omit(hof_players$H.x[hof_players$H.x > 3000])))
hr500 <- as.numeric(length(na.omit(hof_players$HR.x[hof_players$HR.x > 500])))
over500and3k <- as.numeric(length(na.omit(
hof_players$HR.x[((hof_players$HR.x > 500)&(hof_players$H.x > 3000))])))
percentOver3k <- round(hits3k/nrow(filter(hof_players, AB > 4000)) * 100, 2)
percentOver500 <- round(hr500/nrow(filter(hof_players, AB > 4000)) * 100, 2)
over500and3kPercent <-
round((over500and3k)/nrow(filter(hof_players, AB > 4000)) * 100, 2)
#how many above 3000 strikeouts or 300 wins out of qualifying pitchers?
SO3k <- as.numeric(length(na.omit(hof_players$SO.y[hof_players$SO.y > 3000])))
wins300 <- as.numeric(length(na.omit(hof_players$W[hof_players$W > 300])))
over300and3k <- as.numeric(length(na.omit(
hof_players$SO.y[((hof_players$W > 300)&(hof_players$SO.y > 3000))])))
percentOfSO3k <- round(SO3k/nrow(filter(hof_players, IP > 0)) * 100, 2)
percentOver300 <- round(wins300/nrow(filter(hof_players, IP > 0)) * 100, 2)
over300and3kPercent <-
round((over300and3k)/nrow(filter(hof_players, IP > 0)) * 100, 2)
hof_players$H.x[hof_players$H.x > 3000]
filter(hof_players, H.x > 3000)
filter(hof_players, H.x > 3000)$Name
# ============================================================================
# Title: Create Graphs
# Description:
#   This script makes a players stats csv.
# Input(s): data file 'hof.csv', 'hof-batting.csv', 'hof - pitching.csv'
# Output(s): data file 'hof-players.csv'
# Author: Timothy Tan
# Date: 2-5-2018
# ============================================================================
library(ggplot2)
library(dplyr)
library(readr)
hof_players <- read_csv("data/hof-player-stats.csv")
#3000 hits and 500 home runs
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Hits", y = "Home Runs",
title = "Home Runs and Hits among current Hall of Famers")
ggsave(filename = "images/hits_hr.png")
#3000 strikeouts and 300 wins
ggKW <- ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y >= 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W >= 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y >= 3000, W >= 300),
aes(x = SO.y, y = W, color = 'green')) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
theme(legend.position="none") +
labs(x = "Strikeouts", y = "Wins",
title = "Strikeouts and Wins among current Hall of Famers")
ggsave(filename = "images/strikeouts_wins.png")
#how many players in the hall of fame?
numBatters <- as.numeric(nrow(filter(hof_players, AB > 4000)))
numPitchers <- as.numeric(nrow(filter(hof_players, IP > 0)))
numTotal <- as.numeric(nrow(hof_players))
#how many above 3000 hits or 500 homeruns out of qualifying batters?
hits3k <- as.numeric(length(na.omit(hof_players$H.x[hof_players$H.x >= 3000])))
hr500 <- as.numeric(length(na.omit(hof_players$HR.x[hof_players$HR.x >= 500])))
over500and3k <- as.numeric(length(na.omit(
hof_players$HR.x[((hof_players$HR.x >= 500)&(hof_players$H.x >= 3000))])))
percentOver3k <- round(hits3k/nrow(filter(hof_players, AB > 4000)) * 100, 2)
percentOver500 <- round(hr500/nrow(filter(hof_players, AB > 4000)) * 100, 2)
over500and3kPercent <-
round((over500and3k)/nrow(filter(hof_players, AB > 4000)) * 100, 2)
#how many above 3000 strikeouts or 300 wins out of qualifying pitchers?
SO3k <- as.numeric(length(na.omit(hof_players$SO.y[hof_players$SO.y >= 3000])))
wins300 <- as.numeric(length(na.omit(hof_players$W[hof_players$W >= 300])))
over300and3k <- as.numeric(length(na.omit(
hof_players$SO.y[((hof_players$W >= 300)&(hof_players$SO.y >= 3000))])))
percentOfSO3k <- round(SO3k/nrow(filter(hof_players, IP > 0)) * 100, 2)
percentOver300 <- round(wins300/nrow(filter(hof_players, IP > 0)) * 100, 2)
over300and3kPercent <-
round((over300and3k)/nrow(filter(hof_players, IP > 0)) * 100, 2)
filter(hof_players, H.x >= 3000)$Name
no3kOr500 <- round((numBatters - hits3k -hr500 + over500and3k)/
nrow(filter(hof_players, AB > 4000)) * 100, 2)
no3kOr300 <- round((numPitchers - SO3k - wins300 + over300and3k)/
nrow(filter(hof_players, IP > 0)) * 100, 2)
ggKW <- ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y >= 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W >= 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y >= 3000, W >= 300),
aes(x = SO.y, y = W, color = 'green')) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
labs(x = "Strikeouts", y = "Wins",
title = "Strikeouts and Wins among current Hall of Famers")
ggsave(filename = "images/strikeouts_wins.png")
ggKW <- ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y >= 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W >= 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y >= 3000, W >= 300),
aes(x = SO.y, y = W, color = 'green')) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
labs(x = "Strikeouts", y = "Wins",
title = "Strikeouts and Wins among current Hall of Famers")
ggsave(filename = "images/strikeouts_wins.png")
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs",
title = "Home Runs and Hits among current Hall of Famers")
ggsave(filename = "images/hits_hr.png")
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
scale_fill_manual(values=c("blue", "red", "green"),
labels=c("3000 hits", "500 home runs",
"3000 hits and 500 home runs")) +
labs(x = "Hits", y = "Home Runs",
title = "Home Runs and Hits among current Hall of Famers")
ggsave(filename = "images/hits_hr.png")
#3000 hits and 500 home runs
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs",
title = "Home Runs and Hits among current Hall of Famers")
ggsave(filename = "images/hits_hr.png")
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
scale_color_manual(labels = c('3000 hits'), values = c('blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'red')) +
scale_color_manual(labels = c('500 home runs'), values = c('red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'green')) +
scale_color_manual(labels = c('3000 hits and 500 home runs'),
values = c('green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs",
title = "Home Runs and Hits among current Hall of Famers")
ggsave(filename = "images/hits_hr.png")
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'green')) +
scale_color_manual(labels = c('3000 hits', '500 home runs',
'3000 hits and 500 home runs'),
values = c('blue', 'red', 'green')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs",
title = "Home Runs and Hits among current Hall of Famers")
ggsave(filename = "images/hits_hr.png")
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'green')) +
scale_color_manual(labels = c('3000 hits', '500 home runs',
'3000 hits and 500 home runs'),
values = c('blue', 'green', 'red')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs",
title = "Home Runs and Hits among current Hall of Famers")
ggsave(filename = "images/hits_hr.png")
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'green')) +
scale_color_manual(labels = c('3000 hits', '3000 hits and 500 home runs',
'500 home runs'),
values = c('blue', 'green', 'red')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs",
title = "Home Runs and Hits among current Hall of Famers")
ggsave(filename = "images/hits_hr.png")
ggHitsHR <- ggplot() +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x < 500),
aes(x = H.x, y = HR.x)) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x < 500),
aes(x = H.x, y = HR.x, color = 'blue')) +
geom_point(data = filter(hof_players, AB > 4000, H.x < 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'red')) +
geom_point(data = filter(hof_players, AB > 4000, H.x >= 3000, HR.x >= 500),
aes(x = H.x, y = HR.x, color = 'green')) +
scale_color_manual(labels = c('3000 hits', '3000 hits and 500 home runs',
'500 home runs'),
values = c('blue', 'green', 'red')) +
geom_hline(yintercept = 500) +
geom_vline(xintercept = 3000) +
labs(x = "Hits", y = "Home Runs",
title = "Home Runs and Hits among current Hall of Famers") +
theme(legend.title=element_blank())
ggsave(filename = "images/hits_hr.png")
ggKW <- ggplot(data = filter(hof_players, IP > 0)) +
geom_point(aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W < 300),
aes(x = SO.y, y = W)) +
geom_point(data = filter(hof_players, IP > 0, SO.y >= 3000, W < 300),
aes(x = SO.y, y = W, color = 'blue')) +
geom_point(data = filter(hof_players, IP > 0, SO.y < 3000, W >= 300),
aes(x = SO.y, y = W, color = 'red')) +
geom_point(data = filter(hof_players, IP > 0, SO.y >= 3000, W >= 300),
aes(x = SO.y, y = W, color = 'green')) +
scale_color_manual(labels = c('3000 strikeouts',
'3000 strikeouts and 300 wins',
'300 wins'),
values = c('blue', 'green', 'red')) +
geom_hline(yintercept = 300) +
geom_vline(xintercept = 3000) +
labs(x = "Strikeouts", y = "Wins",
title = "Strikeouts and Wins among current Hall of Famers") +
theme(legend.title=element_blank())
ggsave(filename = "images/strikeouts_wins.png")
numRelievers <- as.numeric(nrow(filter(hof_players, GS < 100, IP > 0)))
